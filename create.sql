create table account_remote_ids (remote_id bigint not null, account_id bigint not null, remote_system_id bigint not null, primary key (account_id, remote_system_id)) engine=InnoDB;
create table accounts (id bigint not null auto_increment, added date not null, bnet_id bigint not null, bnet_tag varchar(32) not null, last_update date not null, primary key (id)) engine=InnoDB;
create table characters (id bigint not null auto_increment, bnet_id bigint not null, name varchar(32) not null, rank tinyint not null, region varchar(2) not null, server varchar(32) not null, account_id bigint, guild_id bigint, primary key (id)) engine=InnoDB;
create table discord_online_users (member_id bigint not null, guild_id bigint not null, last_online date not null, member_name varchar(64) not null, primary key (guild_id, member_id)) engine=InnoDB;
create table discord_settings (delete_user_after_inactive_days integer not null, reaction_message_id bigint, remote_system bigint not null, primary key (remote_system)) engine=InnoDB;
create table guilds (id bigint not null auto_increment, name varchar(32) not null, region varchar(2) not null, server varchar(32) not null, primary key (id)) engine=InnoDB;
create table remote_system_rank_to_group (guild_rank_to tinyint not null, guild_rank_from tinyint not null, group_name varchar(64) not null, remote_system_id bigint not null, primary key (guild_rank_from, guild_rank_to, remote_system_id)) engine=InnoDB;
create table remote_systems (id bigint not null auto_increment, former_member_group varchar(64), hmac_key varchar(88) not null, member_group varchar(64) not null, name_link varchar(255) not null, system_id bigint not null, type varchar(32) not null, guild_id bigint not null, primary key (id)) engine=InnoDB;
alter table account_remote_ids add constraint idx_account_remote_ids_remote_system_id_remote_id unique (remote_system_id, remote_id);
create index idx_accounts_last_update on accounts (last_update);
alter table accounts add constraint idx_accounts_bnet_id unique (bnet_id);
create index idx_characters_account_id on characters (account_id);
create index idx_characters_guild_id on characters (guild_id);
alter table characters add constraint idx_characters_bnet_id_region unique (bnet_id, region);
create index idx_discord_online_users_guild_id on discord_online_users (guild_id);
create index idx_discord_online_users_last_online on discord_online_users (last_online);
alter table guilds add constraint idx_guilds_region_server_name unique (region, server, name);
create index idx_remote_system_rank_to_group_remote_system_id on remote_system_rank_to_group (remote_system_id);
create index idx_remote_systems_guild_id on remote_systems (guild_id);
alter table remote_systems add constraint idx_remote_systems_type_system_id_name_link unique (type, system_id, name_link);
alter table account_remote_ids add constraint fk_account_remote_ids_account_id foreign key (account_id) references accounts (id);
alter table account_remote_ids add constraint fk_account_remote_ids_remote_system_id foreign key (remote_system_id) references remote_systems (id);
alter table characters add constraint fk_characters_account_id foreign key (account_id) references accounts (id);
alter table characters add constraint fk_characters_guild_id foreign key (guild_id) references guilds (id);
alter table discord_settings add constraint fk_discord_settings_remote_system foreign key (remote_system) references remote_systems (id);
alter table remote_system_rank_to_group add constraint fk_remote_system_rank_to_group_remote_system_id foreign key (remote_system_id) references remote_systems (id);
alter table remote_systems add constraint fk_remote_systems_guild_id foreign key (guild_id) references guilds (id);
